plugins {
    id 'org.ajoberstar.grgit' version '4.1.0'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'org.javamodularity.moduleplugin' version '1.8.7' apply false
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'org.javamodularity.moduleplugin'


repositories {
    mavenCentral()
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

//java.toolchain.languageVersion = JavaLanguageVersion.of(16)
compileJava {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

test {
    exclude '**/*'
    useJUnitPlatform()
}

group = 'cpw.mods'

version = grgit.describe(longDescr: true).split('-').with { "${it[0]}.${it[1]}" }

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.+')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.7.+')
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    moduleOptions {
        addExports = ['java.base/sun.security.util': 'cpw.mods.securejarhandler']
    }
}

jar {
    manifest {
        attributes(
                'Specification-Title': 'securejarhandler',
                'Specification-Vendor': 'forge',
                'Specification-Version': '1', // We are version 1 of ourselves
                'Implementation-Title': project.name,
                'Implementation-Version': "${project.version}+${System.getenv("BUILD_NUMBER")?:0}+${grgit.branch.current().getName()}.${grgit.head().abbreviatedId}",
                'Implementation-Vendor':'forge',
                'Implementation-Timestamp': java.time.Instant.now().toString(),
                'Git-Commit': grgit.head().abbreviatedId,
                'Git-Branch': grgit.branch.current().getName(),
                'Build-Number': "${System.getenv("BUILD_NUMBER")?:0}",
        )
    }
}

artifacts {
    archives jar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            pom {
                name = 'Secure Modular Jar handler'
                description = 'Making the Java modular system provide security information'
                url = 'https://github.com/cpw/securejarhandler'
                scm {
                    url = 'https://github.com/cpw/securejarhandler'
                    connection = 'scm:git:git://github.com/cpw/securejarhandler.git'
                    developerConnection = 'scm:git:git@github.com:cpw/securejarhandler.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/cpw/securejarhandler/issues'
                }

                developers {
                    developer {
                        id = 'cpw'
                        name = 'cpw'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = System.env.MAVEN_USER ?: 'not'
                password = System.env.MAVEN_PASSWORD ?: 'set'
            }
            url 'https://maven.minecraftforge.net/releases'
        }
    }
}